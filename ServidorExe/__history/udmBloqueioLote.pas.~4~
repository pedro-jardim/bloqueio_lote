Unit udmBloqueioLote;

interface

uses SysUtils, Classes, InvokeRegistry, Midas, SOAPMidas, SOAPDm,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.MSSQL, FireDAC.Phys.MSSQLDef, FireDAC.VCLUI.Wait,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Phys.ODBCBase, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  IdmBloqueioLote = interface(IAppServerSOAP)
    ['{192F05A7-37AF-4EEB-9DDB-604CA1E6BF01}']
  end;

  TdmBloqueioLote = class(TSoapDataModule, IdmBloqueioLote, IAppServerSOAP, IAppServer)
    FDConnection: TFDConnection;
    qryTeste: TFDQuery;
    MSSQLDriverLink: TFDPhysMSSQLDriverLink;
    procedure SoapDataModuleDestroy(Sender: TObject);
  private

  public

  end;

implementation

{$R *.DFM}

procedure TdmBloqueioLoteCreateInstance(out obj: TObject);
begin
 obj := TdmBloqueioLote.Create(nil);
end;

procedure TdmBloqueioLote.SoapDataModuleDestroy(Sender: TObject);
begin
  FDConnection.Connected := False;
end;

initialization
   InvRegistry.RegisterInvokableClass(TdmBloqueioLote, TdmBloqueioLoteCreateInstance);
   InvRegistry.RegisterInterface(TypeInfo(IdmBloqueioLote));
end.
